palettes <- wes_palette("Royal2", n = 5)
pretty_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
stat_halfeye(
adjust = 0.5,
width = 0.6,
.width = 0,
justification = -0.3,
point_colour = NA,
aes(color = variable)  # Color of raincloudplots
) +
geom_boxplot(
width = 0.25,
outlier.shape = 2,
color = "black",  # Color for border of the boxplots
fill = NA,  # Colors for the filling of the boxplots -> empty
) +
geom_point(
size = 1.5,             # Size of the points
alpha = 0.8,            # transparency of the points
position = position_jitter(
seed = 1, width = 0.1
),
aes(color = variable)   # color of the points
) +
scale_color_manual(values = palettes[1:6]) +  # Adjust colors for points and lines
scale_fill_manual(values = palettes[1:6]) +
scale_x_discrete(
breaks = c("mean_bfi_a", "mean_bfi_c", "mean_bfi_e", "mean_bfi_o", "mean_bfi_n"), # change variable names
labels = c("mean_bfi_a" = "Agreeableness",
"mean_bfi_c" = "Conscientiousness",
"mean_bfi_e" = "Extraversion",
"mean_bfi_o" = "Openness",
"mean_bfi_n" = "Neuroticism")
) +
theme_classic() + # add theme
# ass title, subtitle and labels for axis
labs(title = "Distribution of the mean values of the Big Five Inventory (BFI)",
subtitle = "for the Subscales Agreeableness, Conscientiousness, Extraversion, Openness, Neuroticism",
x = "Subscales of the BFI", y = "Mean") +
theme(legend.position = "none")  # remove legend
pretty_plot
bad_plot <- ggplot(melted_data, aes(x = variable)) +
geom_histogram() +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by Gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
bad_plot
bad_plot <- ggplot(melted_data, aes(x = variable)) +
geom_histogram() +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by Gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
bad_plot
bad_plot <- ggplot(melted_data, aes(x = variable, y = value)) +
geom_histogram() +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by Gender") +
theme_classic()
bad_plot
bar_plot <- ggplot(melted_data, aes(x = variable, fill = variable)) +
geom_bar() +
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
theme_classic() +
scale_fill_manual(values = palettes[2:6])  # Adjust colors if needed
bar_plot
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar() +
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
bar_plot
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity") +
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
theme_classic() +
scale_fill_manual(values = palettes[2:6])  # Adjust colors if needed
# Print the bar plot
print(bar_plot)
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity") +
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
theme_classic() +
scale_fill_manual(values = "black")  # Adjust colors if needed
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar() +
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
theme_classic() +
scale_fill_manual(values = "black")  # Adjust colors if needed
# Print the bar plot
print(bar_plot)
bar_plot <- ggplot(melted_data, aes(x = value, fill = variable)) +
geom_bar() +
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
theme_classic() +
scale_fill_manual(values = "black")  # Adjust colors if needed
# Print the bar plot
print(bar_plot)
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity") +
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
theme_classic() +
scale_fill_manual(values = palettes[2:6])  # Adjust colors if needed
# Print the bar plot
bar_plot
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "black") +  # Set the border color to black
xlab("Subscales") +
ylab("Frequency") +
ggtitle("Frequency of Subscale Categories") +
theme_classic() +
scale_fill_manual(values = rep("black", 5))  # Set fill color to black for all categories
# Print the bar plot
print(bar_plot)
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to black
xlab("variable") +
ylab("value") +
ggtitle("test") +
theme_classic() +
scale_fill_manual(values = rep("red", 5))  # Set fill color to black for all categories
# Print the bar plot
print(bar_plot)
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to black
xlab("variable") +
ylab("value") +
theme_juno() +
scale_fill_manual(values = rep("red", 5))  # Set fill color to black for all categories
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to black
xlab("variable") +
ylab("value") +
theme_economist() +
scale_fill_manual(values = rep("red", 5))  # Set fill color to black for all categories
install.packages("ggdark")
library(ggdark)
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to black
xlab("variable") +
ylab("value") +
dar_theme_gray() +
scale_fill_manual(values = rep("red", 5))  # Set fill color to black for all categories
library(ggdark)
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to black
xlab("variable") +
ylab("value") +
dar_theme_gray() +
scale_fill_manual(values = rep("red", 5))  # Set fill color to black for all categories
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to black
xlab("variable") +
ylab("value") +
dark_theme_gray() +
scale_fill_manual(values = rep("red", 5))  # Set fill color to black for all categories
# Print the bar plot
print(bar_plot)
install.packages("extrafont")
install.packages("extrafont")
library(extrafont)
font_import()
font_import()
loadfonts(device="win")
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to red
xlab("variable") +
ylab("value") +
dark_theme_gray() + #add theme
theme(text=element_text(family="Comic Sans", face="bold", size=12)) +
scale_fill_manual(values = rep("red", 5))  # Set fill color to red for all categories
bar_plot <- ggplot
library(extrafont)
# Register Comic Sans font
font_import(pattern = "Comic Sans MS")
1
library(extrafont)
# Register Comic Sans font
font_import(pattern = "Comic Sans MS")
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)
data_processed <- read_csv("data_processed.csv")
library(ggplot2)
library(ggdist)
library(wesanderson)
library(tidyr)
install.packages("extrafont")
library(extrafont)
library(ggdark)
# Loading of color palette from the wesanderson package
palettes <- wes_palette("Royal2", n = 5)
pretty_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
stat_halfeye(
adjust = 0.5,
width = 0.6,
.width = 0,
justification = -0.3,
point_colour = NA,
aes(color = variable)  # Color of raincloudplots
) +
geom_boxplot(
width = 0.25,
outlier.shape = 2,
color = "black",  # Color for border of the boxplots
fill = NA,  # Colors for the filling of the boxplots -> empty
) +
geom_point(
size = 1.5,             # Size of the points
alpha = 0.8,            # transparency of the points
position = position_jitter(
seed = 1, width = 0.1
),
aes(color = variable)   # color of the points
) +
scale_color_manual(values = palettes[1:6]) +  # Adjust colors for points and lines
scale_fill_manual(values = palettes[1:6]) +
scale_x_discrete(
breaks = c("mean_bfi_a", "mean_bfi_c", "mean_bfi_e", "mean_bfi_o", "mean_bfi_n"), # change variable names
labels = c("mean_bfi_a" = "Agreeableness",
"mean_bfi_c" = "Conscientiousness",
"mean_bfi_e" = "Extraversion",
"mean_bfi_o" = "Openness",
"mean_bfi_n" = "Neuroticism")
) +
theme_classic() + # add theme
# ass title, subtitle and labels for axis
labs(title = "Distribution of the mean values of the Big Five Inventory (BFI)",
subtitle = "for the Subscales Agreeableness, Conscientiousness, Extraversion, Openness, Neuroticism",
x = "Subscales of the BFI", y = "Mean") +
theme(legend.position = "none")  # remove legend
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)
data_processed <- read_csv("data_processed.csv")
library(ggplot2)
library(ggdist)
library(wesanderson)
library(tidyr)
install.packages("extrafont")
library(extrafont)
library(ggdark)
melted_data <- gather(data_without_na, key = "variable", value = "value", -subscales)
install.packages("extrafont")
melted_data <- gather(data_processes, key = "variable", value = "value", -subscales)
subscale_names <- c("a", "c", "e", "o", "n")
# Melt die Daten für den Raincloud-ähnlichen Plot
melted_data <- reshape2::melt(data_processed, id.vars = NULL, measure.vars = paste0("mean_bfi_", subscale_names))
# Loading of color palette from the wesanderson package
palettes <- wes_palette("Royal2", n = 5)
pretty_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
stat_halfeye(
adjust = 0.5,
width = 0.6,
.width = 0,
justification = -0.3,
point_colour = NA,
aes(color = variable)  # Color of raincloudplots
) +
geom_boxplot(
width = 0.25,
outlier.shape = 2,
color = "black",  # Color for border of the boxplots
fill = NA,  # Colors for the filling of the boxplots -> empty
) +
geom_point(
size = 1.5,             # Size of the points
alpha = 0.8,            # transparency of the points
position = position_jitter(
seed = 1, width = 0.1
),
aes(color = variable)   # color of the points
) +
scale_color_manual(values = palettes[1:6]) +  # Adjust colors for points and lines
scale_fill_manual(values = palettes[1:6]) +
scale_x_discrete(
breaks = c("mean_bfi_a", "mean_bfi_c", "mean_bfi_e", "mean_bfi_o", "mean_bfi_n"), # change variable names
labels = c("mean_bfi_a" = "Agreeableness",
"mean_bfi_c" = "Conscientiousness",
"mean_bfi_e" = "Extraversion",
"mean_bfi_o" = "Openness",
"mean_bfi_n" = "Neuroticism")
) +
theme_classic() + # add theme
# ass title, subtitle and labels for axis
labs(title = "Distribution of the mean values of the Big Five Inventory (BFI)",
subtitle = "for the Subscales Agreeableness, Conscientiousness, Extraversion, Openness, Neuroticism",
x = "Subscales of the BFI", y = "Mean") +
theme(legend.position = "none")  # remove legend
pretty_plot
library(extrafont)
# Register Comic Sans font
font_import(pattern = "Comic Sans MS")
# Register Comic Sans font
font_import(pattern = "Comic Sans MS")
# Create a bar plot with Comic Sans font
bar_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to red
xlab("Variable") +
ylab("Value") +
dark_theme_gray() +  # Add theme
theme(text = element_text(family = "Comic Sans MS", face = "bold", size = 12)) +
scale_fill_manual(values = rep("red", 5))  # Set fill color to red for all categories
# Create a bar plot with Comic Sans font
bad_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to red
xlab("Variable") +
ylab("Value") +
dark_theme_gray() +  # Add theme
scale_fill_manual(values = rep("red", 5))  # Set fill color to red for all categories
# Create a bar plot with Comic Sans font
bad_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to red
xlab("Variable") +
ylab("Value") +
dark_theme_gray() +  # Add theme
scale_fill_manual(values = rep("red", 5))  # Set fill color to red for all categories
# Print the bar plot
bad_plot
plot_bad_theresa_halbritter_pdf <- "plot_bad_halbritter.pdf"
plot_bad_theresa_halbritter_png <- "plot_bad_halbritter.png"
# Save as PDF
ggsave(plot_bad_theresa_halbritter, plot = bad_plot, width = 8, height = 6)
# Save as PDF
ggsave(plot_bad_theresa_halbritter_pdf, plot = bad_plot, width = 8, height = 6)
# Save as PNG
ggsave(plot_bad_theresa_halbritter_png, plot = pad_plot, width = 8, height = 6, dpi = 300)
# Save as PNG
ggsave(plot_bad_theresa_halbritter_png, plot = bad_plot, width = 8, height = 6, dpi = 300)
plot_good_theresa_halbritter_pdf <- "plot_good_halbritter.pdf"
plot_good_theresa_halbritter_png <- "plot_good_halbritter.png"
# Save as PDF
ggsave(plot_good_theresa_halbritter_pdf, plot = pretty_plot, width = 8, height = 6)
# Save as PNG
ggsave(plot_good_theresa_halbritter_png, plot = pretty_plot, width = 8, height = 6, dpi = 300)
```
# Write to disk
```
```
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)
data_processed <- read_csv("data_processed.csv")
library(ggplot2)
library(ggdist)
library(wesanderson)
library(tidyr)
library(extrafont)
library(ggdark)
subscale_names <- c("a", "c", "e", "o", "n")
# Melt die Daten für den Raincloud-ähnlichen Plot
melted_data <- reshape2::melt(data_processed, id.vars = NULL, measure.vars = paste0("mean_bfi_", subscale_names))
# Loading of color palette from the wesanderson package
palettes <- wes_palette("Royal2", n = 5)
pretty_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
stat_halfeye(
adjust = 0.5,
width = 0.6,
.width = 0,
justification = -0.3,
point_colour = NA,
aes(color = variable)  # Color of raincloudplots
) +
geom_boxplot(
width = 0.25,
outlier.shape = 2,
color = "black",  # Color for border of the boxplots
fill = NA,  # Colors for the filling of the boxplots -> empty
) +
geom_point(
size = 1.5,             # Size of the points
alpha = 0.8,            # transparency of the points
position = position_jitter(
seed = 1, width = 0.1
),
aes(color = variable)   # color of the points
) +
scale_color_manual(values = palettes[1:6]) +  # Adjust colors for points and lines
scale_fill_manual(values = palettes[1:6]) +
scale_x_discrete(
breaks = c("mean_bfi_a", "mean_bfi_c", "mean_bfi_e", "mean_bfi_o", "mean_bfi_n"), # change variable names
labels = c("mean_bfi_a" = "Agreeableness",
"mean_bfi_c" = "Conscientiousness",
"mean_bfi_e" = "Extraversion",
"mean_bfi_o" = "Openness",
"mean_bfi_n" = "Neuroticism")
) +
theme_classic() + # add theme
# ass title, subtitle and labels for axis
labs(title = "Distribution of the mean values of the Big Five Inventory (BFI)",
subtitle = "for the Subscales Agreeableness, Conscientiousness, Extraversion, Openness, Neuroticism",
x = "Subscales of the BFI", y = "Mean") +
theme(legend.position = "none")  # remove legend
pretty_plot
# Create a bar plot with Comic Sans font
bad_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to red
xlab("Variable") +
ylab("Value") +
dark_theme_gray() +  # Add theme
scale_fill_manual(values = rep("red", 5))  # Set fill color to red for all categories
# Print the bar plot
bad_plot
plot_bad_theresa_halbritter_pdf <- "plot_bad_halbritter.pdf"
plot_bad_theresa_halbritter_png <- "plot_bad_halbritter.png"
# Save as PDF
ggsave(plot_bad_theresa_halbritter_pdf, plot = bad_plot, width = 8, height = 6)
# Save as PNG
ggsave(plot_bad_theresa_halbritter_png, plot = bad_plot, width = 8, height = 6, dpi = 300)
plot_good_theresa_halbritter_pdf <- "plot_good_halbritter.pdf"
plot_good_theresa_halbritter_png <- "plot_good_halbritter.png"
# Save as PDF
ggsave(plot_good_theresa_halbritter_pdf, plot = pretty_plot, width = 8, height = 6)
# Save as PNG
ggsave(plot_good_theresa_halbritter_png, plot = pretty_plot, width = 8, height = 6, dpi = 300)
sessionInfo()
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)
data_processed <- read_csv("data_processed.csv")
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include" & !is.na(exclude_participant))
library(ggplot2)
library(ggdist)
library(wesanderson)
library(tidyr)
library(extrafont)
library(ggdark)
subscale_names <- c("a", "c", "e", "o", "n")
# Melt die Daten für den Raincloud-ähnlichen Plot
melted_data <- reshape2::melt(data_processed_after_exclusions, id.vars = NULL, measure.vars = paste0("mean_bfi_", subscale_names))
# Loading of color palette from the wesanderson package
palettes <- wes_palette("Royal2", n = 5)
pretty_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
stat_halfeye(
adjust = 0.5,
width = 0.6,
.width = 0,
justification = -0.3,
point_colour = NA,
aes(color = variable)  # Color of raincloudplots
) +
geom_boxplot(
width = 0.15,
outlier.shape = 2,
color = "black",  # Color for border of the boxplots
fill = NA,  # Colors for the filling of the boxplots -> empty
) +
geom_point(
size = 1.5,             # Size of the points
alpha = 0.8,            # transparency of the points
position = position_jitter(
seed = 1, width = 0.1
),
aes(color = variable)   # color of the points
) +
scale_color_manual(values = palettes[1:6]) +  # Adjust colors for points and lines
scale_fill_manual(values = palettes[1:6]) +
scale_x_discrete(
breaks = c("mean_bfi_a", "mean_bfi_c", "mean_bfi_e", "mean_bfi_o", "mean_bfi_n"), # change variable names
labels = c("mean_bfi_a" = "Agreeableness",
"mean_bfi_c" = "Conscientiousness",
"mean_bfi_e" = "Extraversion",
"mean_bfi_o" = "Openness",
"mean_bfi_n" = "Neuroticism")
) +
theme_classic() + # add theme
# ass title, subtitle and labels for axis
labs(title = "Distribution of the mean values of the Big Five Inventory (BFI)",
subtitle = "for the Subscales Agreeableness, Conscientiousness, Extraversion, Openness, Neuroticism",
x = "Subscales of the BFI", y = "Mean") +
theme(legend.position = "none")  # remove legend
pretty_plot
# Create a bar plot
bad_plot <- ggplot(melted_data, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", color = "red") +  # Set the border color to red
xlab("Variable") +
ylab("Value") +
dark_theme_gray() +  # Add theme
scale_fill_manual(values = rep("red", 5))  # Set fill color to red for all categories
# Print the bar plot
bad_plot
plot_bad_theresa_halbritter_pdf <- "plot_bad_halbritter.pdf"
plot_bad_theresa_halbritter_png <- "plot_bad_halbritter.png"
# Save as PDF
ggsave(plot_bad_theresa_halbritter_pdf, plot = bad_plot, width = 8, height = 6)
# Save as PNG
ggsave(plot_bad_theresa_halbritter_png, plot = bad_plot, width = 8, height = 6, dpi = 300)
plot_good_theresa_halbritter_pdf <- "plot_good_halbritter.pdf"
plot_good_theresa_halbritter_png <- "plot_good_halbritter.png"
# Save as PDF
ggsave(plot_good_theresa_halbritter_pdf, plot = pretty_plot, width = 8, height = 6)
# Save as PNG
ggsave(plot_good_theresa_halbritter_png, plot = pretty_plot, width = 8, height = 6, dpi = 300)
sessionInfo()
