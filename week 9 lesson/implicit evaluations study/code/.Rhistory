xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free")
p10
#raincloud plot
p9 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain() +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p9
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p8
p8 + theme(legend.text = element_text(case = "capitalize"))
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p8 +
scale_shape_discrete(labels = c("FEMALE", "MEN"))
p8
p8 <- ggplot(p4, aes(x = factor(gender, levels = c("female", "male")), y = AMP_score, fill = gender))+
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
guides(fill = guide_legend(title = "Gender", reverse = TRUE))
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
guides(fill = guide_legend(title = "Gender", reverse = TRUE))+
scale_fill_manual(labels = c("MEN", "WOMAN"))
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
guides(fill = guide_legend(title = "Gender", reverse = TRUE))+
p8
#raincloud plot
p9 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain() +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual()
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
guides(fill = guide_legend(title = "Gender", reverse = TRUE))
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
guides(fill = guide_legend(title = "Gender", reverse = TRUE))+
scale_fill_manual(labels = c("MEN", "WOMAN"))
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
guides(fill = guide_legend(title = "Gender", reverse = TRUE))+
scale_fill_manual(labels = c("MEN", "WOMAN"))+
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
guides(fill = guide_legend(title = "Gender", reverse = TRUE))+
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual(labels = c("MEN", "WOMAN"))+
theme_classic()
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual(values = c("male" = "darkorange", "female" = "dodgerblue"),
name = "Gender",
breaks = c("male", "female"),
labels = c("MEN", "WOMEN")) +
theme_classic()
p8
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual(values = c("male" = "lightblue", "female" = "lightgreen"),
name = "Gender",
breaks = c("male", "female"),
labels = c("MEN", "WOMEN")) +
theme_classic()
p8
#raincloud plot
p9 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain() +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual(values = c("male" = "lightblue", "female" = "lightgreen"),
name = "Gender",
breaks = c("male", "female"),
labels = c("MEN", "WOMEN")) +
theme_classic()
p9
#histogram
p10 <- ggplot(p4, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0) +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free")
#histogram
p10 <- ggplot(p4, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0) +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free")+
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual(values = c("male" = "lightblue", "female" = "lightgreen"),
name = "Gender",
breaks = c("male", "female"),
labels = c("MEN", "WOMEN"))
p10
#histogram
p10 <- ggplot(p4, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0) +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender", labels = c("MEN", "WOMEN")) +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free")+
scale_fill_brewer(palette = "Set2", name = "Gender") +
p10
#histogram
p10 <- ggplot(p4, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0) +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender", labels = c("MEN", "WOMEN")) +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free")+
scale_fill_brewer(palette = "Set2", name = "Gender")
p10
p10 <- ggplot(p4, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.05, boundary = 0) +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender", labels = c("MEN", "WOMEN")) +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free") +
theme(legend.text = element_text(size = 12))  # Ändert die Schriftgröße in der Legende
p10
#histogram
p10 <- ggplot(p4, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0) +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free")+
scale_fill_brewer(palette = "Set2", name = "Gender")
p10
t_test_AMP_by_gender <- t.test(AMP_score ~ gender, data = p4)
t_test_AMP_by_gender
library(patchwork)
p5+p6+p7
(p5|p6)/
p7
combined_plot <- (p5|p6)/
p7
(p5|p6)/
p7
p11 <- (p5|p6)/
p7
(p5|p6)/
p7
png_file <- "patchwork_plot.png"
pdf_file <- "patchwork_plot.pdf"
ggsave(png_file, (p5 | p6) / p7, dpi = 300)
ggsave(png_file, (p5 | p6) / p7, dpi = 300)
ggsave(pdf_file, (p5 | p6) / p7)
# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(scales)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include")
data_processed |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Whole sample" = 1)) |> # note that you can add header rows to tables like this. The "1" indicates the number of columns the header should span. The sum of these numbers must equal the number of columns or you'll get an error.
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
count(name = "n") |>
kable() |>
add_header_above(header = c("For analysis" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
mutate(age = as.numeric(age)) |>
summarise(Mean = mean(age, na.rm = TRUE),
SD = sd(age, na.rm = TRUE)) |>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() |>
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
rename(Gender = gender) |>
group_by(Gender) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
mutate(Gender = stringr::str_to_sentence(Gender)) |> # Change the case of the Gender variable so that it prints nicely
kable() |>
kable_classic(full_width = FALSE)
# overall self-reported evaluations
dat_mean_ratings <- data_processed_after_exclusions |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# self-reported evaluations by gender category
dat_mean_ratings_by_gender <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings,
dat_mean_ratings_by_gender) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "Self-reported evaluations" = 3)) |>
kable_classic(full_width = FALSE)
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_histogram(binwidth = 1,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("Mean self-reported evaluation") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
theme(panel.grid.minor = element_blank())
ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("AMP score") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 10))
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
theme_linedraw()
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
library("ggExtra")
library("ggplot2")
library("ggdist")
#Version 1
library(ggExtra)
library(patchwork)
data_processed_after_exclusions_women <- data_processed_after_exclusions |>
filter(gender == "female")
p1 <- ggplot(data_processed_after_exclusions_women,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter()+
ggtitle("female")
p1 <- ggMarginal(p1, type = "histogram")
data_processed_after_exclusions_men <- data_processed_after_exclusions |>
filter(gender == "male")
p2 <- ggplot(data_processed_after_exclusions_men,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter() +
ggtitle("male")
p2 <- ggMarginal(p2, type = "histogram")
data_processed_after_exclusions_other <- data_processed_after_exclusions |>
filter(gender == "other/missing/error")
list(p1, p2) |>
wrap_plots()
#Version 2
p <- ggplot(data_processed_after_exclusions, aes(x = AMP_score,
y = mean_evaluation, color = gender)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
theme_classic()
ggMarginal(p, groupColour = TRUE, groupFill = TRUE)
library(ggrepel)
p1 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation, label = subject)) +
geom_jitter() + theme_classic()
p1 <- p1 + geom_text() + labs(title = "geom_text_repel()")
p1
library("remotes")
library("ggmagnify")
from <- c(xmin = 0.5, xmax = 0.65, ymin = 0.75, ymax = 0.95)
to <- c(xmin = 0, xmax = 0.25, ymin = 4, ymax = 5)
p1 + geom_magnify(from = from, to = to)
cor.test(data_processed_after_exclusions$AMP_score, data_processed_after_exclusions$mean_evaluation, method="spearman")
library(ggrain)
library(ggplot2)
library(ggridges)
library(RColorBrewer)
#violin plot
p4 <- subset(data_processed_after_exclusions, gender %in% c("female", "male"))
p5 <- ggplot(p4, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Self-reported evaluations") +
ggtitle("Self-reported evaluations by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p5
#raincloud plot
p6 <- ggplot(p4, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_rain() +
xlab("Gender") +
ylab("Self-reported evaluations") +
ggtitle("Self-reported evaluations by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic()
p6
#histogram
p7 <- ggplot(p4, aes(x = mean_evaluation)) +
geom_histogram(binwidth = 1,
boundary = 0) +
xlab("Mean self-reported evaluations") +
ylab("Frequency") +
ggtitle("Self-reported evaluations by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
theme(panel.grid.minor = element_blank()) +
facet_wrap(~gender, scales = "free")
p7
t_test_evaluation_by_gender <- t.test(mean_evaluation ~ gender, data = p4)
t_test_evaluation_by_gender
library(ggplot2)
library(introdataviz)
p8 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(color = "white", alpha = 0.8) +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual(values = c("male" = "lightblue", "female" = "lightgreen"),
name = "Gender",
breaks = c("male", "female"),
labels = c("MEN", "WOMEN")) +
theme_classic()
p8
#raincloud plot
p9 <- ggplot(p4, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain() +
xlab("Gender") +
ylab("Mean AMP-Score") +
ggtitle("Evaluations on the Affect Misattribution Procedure by gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
scale_fill_manual(values = c("male" = "lightblue", "female" = "lightgreen"),
name = "Gender",
breaks = c("male", "female"),
labels = c("MEN", "WOMEN")) +
theme_classic()
p9
#histogram
p10 <- ggplot(p4, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0) +
xlab("Mean AMP-Score") +
ylab("Frequency") +
ggtitle("Evaluations on the Affect Misattribution Procedure by Gender") +
scale_fill_brewer(palette = "Set2", name = "Gender") +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10)) +
facet_wrap(~gender, scales = "free")+
scale_fill_brewer(palette = "Set2", name = "Gender")
p10
t_test_AMP_by_gender <- t.test(AMP_score ~ gender, data = p4)
t_test_AMP_by_gender
library(patchwork)
(p5|p6)/
p7
png_file <- "patchwork_plot.png"
pdf_file <- "patchwork_plot.pdf"
ggsave(png_file, (p5 | p6) / p7, dpi = 300)
ggsave(pdf_file, (p5 | p6) / p7)
sessionInfo()
