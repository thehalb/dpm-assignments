iat_score_cutoff_bottom <- quantile(data_processed_after_exclusions$D_Score, 0.1, na.rm = TRUE)
iat_extreme_scales <- data_processed_after_exclusions |>
mutate(extreme_iat = ifelse(D_Score >= iat_score_cutoff_top | D_Score <= iat_score_cutoff_bottom,
"extreme",
"normal"))
function_plot_BFI_IAT <- function(column, name_subscale){
ggplot(iat_extreme_scales, aes(x = get(column), y = D_Score)) +
geom_point(alpha = 0.7,
aes(shape = extreme_iat)) +
scale_shape_manual(values = c(17, 16)) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0, option = "mako")) +
ggtitle(name_subscale)+
xlab(paste0("Mean ", name_subscale))+
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
iat_score_cutoff_top <- quantile(data_processed_after_exclusions$D_Score, 0.9, na.rm = TRUE)
iat_score_cutoff_bottom <- quantile(data_processed_after_exclusions$D_Score, 0.1, na.rm = TRUE)
iat_extreme_scales <- data_processed_after_exclusions |>
mutate(extreme_iat = ifelse(D_Score >= iat_score_cutoff_top | D_Score <= iat_score_cutoff_bottom,
"extreme",
"normal"))
function_scatter_plot_bfi <- function(column, name_subscale){
ggplot(iat_extreme_scales, aes(x = get(column), y = D_Score)) +
geom_point(alpha = 0.7,
aes(shape = extreme_iat)) +
scale_shape_manual(values = c(17, 16)) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0, option = "mako")) +
ggtitle(name_subscale)+
xlab(paste0("Mean ", name_subscale))+
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
View(calculate_alpha)
print(function_scatter_plot_bfi)
function_scatter_plot_bfi("column_name", "subscale_name")
function_scatter_plot_bfi("column", "name_subscale")
iat_score_cutoff_top <- quantile(data_processed_after_exclusions$D_Score, 0.9, na.rm = TRUE)
iat_score_cutoff_bottom <- quantile(data_processed_after_exclusions$D_Score, 0.1, na.rm = TRUE)
iat_extreme_scales <- data_processed_after_exclusions |>
mutate(extreme_iat = ifelse(D_Score >= iat_score_cutoff_top | D_Score <= iat_score_cutoff_bottom,
"extreme",
"normal"))
function_scatter_plot_bfi <- function(column, name_subscale){
ggplot(iat_extreme_scales, aes(x = get(column), y = D_Score)) +
geom_point(alpha = 0.7,
aes(shape = extreme_iat)) +
scale_shape_manual(values = c(17, 16)) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0, option = "mako")) +
ggtitle(name_subscale)+
xlab(paste0("Mean ", name_subscale))+
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
print(function_scatter_plot_bfi("column", "name_subscale"))
print(function_scatter_plot_bfi)
plot <- function_scatter_plot_bfi("column", "name_subscale")
print(plot)
View(function_plot_BFI_IAT)
plot <- function_scatter_plot_bfi("D_Score", "name_subscale")
print(plot)
View(data_processed_after_exclusions)
View(iat_extreme_scales)
iat_extreme_scales <- data_processed_after_exclusions |>
mutate(extreme_iat = ifelse(D_Score >= iat_score_cutoff_top | D_Score <= iat_score_cutoff_bottom,
"extreme",
"normal"))
# Calculate IAT score cutoffs
iat_score_cutoff_top <- quantile(data_processed_after_exclusions$D_Score, 0.9, na.rm = TRUE)
iat_score_cutoff_bottom <- quantile(data_processed_after_exclusions$D_Score, 0.1, na.rm = TRUE)
# Create a column indicating extreme or normal IAT scores
data_processed_after_exclusions <- data_processed_after_exclusions %>%
mutate(extreme_iat = ifelse(D_Score >= iat_score_cutoff_top | D_Score <= iat_score_cutoff_bottom,
"extreme",
"normal"))
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
geom_smooth(method = "lm", color = viridis_pal(begin = 0, option = "mako")) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
# Create a combined plot for all personality facets
facet_names <- unique(data_processed_after_exclusions$name_subscale)
# Create a combined plot for all personality facets
facet_names <- unique(data_processed_after_exclusions$name_subscale)
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
conscientiousness_plot <- function_scatter_plot_bfi("mean_bfi_c", "Conscientiousness")
extraversion_plot <- function_scatter_plot_bfi("mean_bfi_e", "Extraversion")
neuroticism_plot <- function_scatter_plot_bfi("mean_bfi_n", "Neuroticism")
openness_plot <- function_scatter_plot_bfi("mean_bfi_o", "Openness")
combined_plot <- agreeableness_plot + conscientiousness_plot + extraversion_plot + neuroticism_plot + openness_plot
print(combined_plot)
View(neuroticism_plot)
print(agreeableness_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
conscientiousness_plot <- function_scatter_plot_bfi("mean_bfi_c", "Conscientiousness")
extraversion_plot <- function_scatter_plot_bfi("mean_bfi_e", "Extraversion")
neuroticism_plot <- function_scatter_plot_bfi("mean_bfi_n", "Neuroticism")
openness_plot <- function_scatter_plot_bfi("mean_bfi_o", "Openness")
print(agreeableness_plot)
print(conscientiousness_plot)
print(extraversion_plot)
print(neuroticism_plot)
print(openness_plot)
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
geom_smooth(method = "lm", color = viridis_pal(begin = 0, option = "mako")) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
conscientiousness_plot <- function_scatter_plot_bfi("mean_bfi_c", "Conscientiousness")
extraversion_plot <- function_scatter_plot_bfi("mean_bfi_e", "Extraversion")
neuroticism_plot <- function_scatter_plot_bfi("mean_bfi_n", "Neuroticism")
openness_plot <- function_scatter_plot_bfi("mean_bfi_o", "Openness")
print(agreeableness_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
geom_smooth(method = "lm", color = viridis_pal(begin = 0, option = "mako"))+
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
conscientiousness_plot <- function_scatter_plot_bfi("mean_bfi_c", "Conscientiousness")
neuroticism_plot <- function_scatter_plot_bfi("mean_bfi_n", "Neuroticism")
openness_plot <- function_scatter_plot_bfi("mean_bfi_o", "Openness")
print(agreeableness_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
print(agreeableness_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none") +
geom_smooth(method = "lm", color = viridis_pal(begin = 0, option = "mako")) +
}
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none") +
abline(lm(column ~ D_Score), col = "blue")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D_Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
print(agreeableness_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_smooth(method = "lm",color = viridis_pal(begin = 0.45, option = "mako")(1)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D-Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
print(agreeableness_plot)
conscientiousness_plot <- function_scatter_plot_bfi("mean_bfi_c", "Conscientiousness")
openness_plot <- function_scatter_plot_bfi("mean_bfi_o", "Openness")
print(agreeableness_plot)
print(conscientiousness_plot)
print(extraversion_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_smooth(method = "lm",color = viridis_pal(option = "mako")(1)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D-Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
print(agreeableness_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D-Score") +
coord_cartesian(xlim = c(1, 7)) +
scale_x_continuous(limits = c(1, 7), breaks = seq(1, 7, by = 1)) +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
print(agreeableness_plot)
print(conscientiousness_plot)
print(extraversion_plot)
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
geom_smooth(method = "lm") +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D-Score") +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
print(agreeableness_plot)
print(conscientiousness_plot)
print(extraversion_plot)
print(neuroticism_plot)
# Calculate IAT score cutoffs
iat_score_cutoff_top <- quantile(data_processed_after_exclusions$D_Score, 0.9, na.rm = TRUE)
iat_score_cutoff_bottom <- quantile(data_processed_after_exclusions$D_Score, 0.1, na.rm = TRUE)
# Create a column indicating extreme or normal IAT scores
data_processed_after_exclusions <- data_processed_after_exclusions %>%
mutate(extreme_iat = ifelse(D_Score >= iat_score_cutoff_top | D_Score <= iat_score_cutoff_bottom,
"extreme",
"normal"))
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
geom_smooth(method = "lm") +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D-Score") +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
conscientiousness_plot <- function_scatter_plot_bfi("mean_bfi_c", "Conscientiousness")
extraversion_plot <- function_scatter_plot_bfi("mean_bfi_e", "Extraversion")
neuroticism_plot <- function_scatter_plot_bfi("mean_bfi_n", "Neuroticism")
openness_plot <- function_scatter_plot_bfi("mean_bfi_o", "Openness")
print(agreeableness_plot)
print(conscientiousness_plot)
print(extraversion_plot)
print(neuroticism_plot)
print(openness_plot)
combined_plot <- agreeableness_plot + conscientiousness_plot + extraversion_plot + neuroticism_plot + openness_plot
print(combined_plot)
# Save the combined plot as both PNG and PDF
ggsave("../combined_plot.png", combined_plot, width = 14, height = 12, units = "cm")
ggsave("../combined_plot.pdf", combined_plot, width = 14, height = 12, units = "cm")
# Save the combined plot as both PNG and PDF
ggsave("../communications/combined_plot.png", combined_plot, width = 14, height = 12, units = "cm")
# Save the combined plot as both PNG and PDF
ggsave("../communications/combined_plot.png", combined_plot, width = 14, height = 12, units = "cm")
ggsave("../communications/combined_plot.pdf", combined_plot, width = 14, height = 12, units = "cm")
# Save the combined plot as both PNG and PDF
ggsave("../communications/combined_plot.png", combining_bfi_plots, width = 14, height = 12, units = "cm")
combining_bfi_plots <- agreeableness_plot + conscientiousness_plot + extraversion_plot + neuroticism_plot + combining_bfi_plots
combining_bfi_plots <- agreeableness_plot + conscientiousness_plot + extraversion_plot + neuroticism_plot + combining_bfi_plots
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(scales)
library(psych)
library(ggplot2)
library(dplyr)
library(ltm)
library(report)
library(cowplot)
library(patchwork)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Whole sample" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include")
data_processed_after_exclusions |>
count(name = "n") |>
kable() |>
add_header_above(header = c("For analysis" = 1)) |>
kable_classic(full_width = FALSE)
# Age
data_processed_after_exclusions |>
mutate(age = as.numeric(age)) |>
summarise(Mean = mean(age, na.rm = TRUE),
SD = sd(age, na.rm = TRUE)) |>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() %>%
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
# Gender
data_processed_after_exclusions |>
group_by(sex) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
kable() |>
kable_classic(full_width = FALSE)
# Calculate proportion for age
availability_age <-
(sum(!is.na(data_processed_after_exclusions$age) & data_processed_after_exclusions$age != "other/missing/error") / nrow(data_processed_after_exclusions)) |>
round(2)
print(paste0("Age was available for ", availability_age))
# Calculate proportion for gender
availability_sex <-
(sum(!is.na(data_processed_after_exclusions$sex) & data_processed_after_exclusions$sex %in% c("f", "m")) / nrow(data_processed_after_exclusions)) |>
round(2)
print(paste0("Gender was available for ", availability_sex))
# Define the items for each personality trait
bfi_a_items <- c("bfi_a1", "bfi_a2", "bfi_a3", "bfi_a4", "bfi_a5", "bfi_a6", "bfi_a7", "bfi_a8", "bfi_a9")
bfi_o_items <- c("bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9", "bfi_o10")
bfi_c_items <- c("bfi_c1", "bfi_c2", "bfi_c3", "bfi_c4", "bfi_c5", "bfi_c6", "bfi_c7", "bfi_c8", "bfi_c9")
bfi_e_items <- c("bfi_e1", "bfi_e2", "bfi_e3", "bfi_e4", "bfi_e5", "bfi_e6", "bfi_e7", "bfi_e8")
bfi_n_items <- c("bfi_n1", "bfi_n2", "bfi_n3", "bfi_n4", "bfi_n5", "bfi_n6", "bfi_n7", "bfi_n8")
bfi_items_list <- list(bfi_a_items, bfi_o_items, bfi_c_items, bfi_e_items, bfi_n_items)
# Function to calculate Cronbach's alpha for a given set of items
calculate_alpha <- function(data, items) {
alpha_result <- alpha(data[, items, drop = FALSE], na.rm = TRUE, check.keys = TRUE)
return(alpha_result$alpha)
}
# Apply the function to each subscale
alphas <- lapply(bfi_items_list, function(items) calculate_alpha(data_processed_after_exclusions, items))
# Print the results
print(alphas)
h1 <- function(subscale, title) {
ggplot(data_processed_after_exclusions, aes(x = !!sym(subscale))) +
geom_histogram(binwidth = 1,
boundary = 0.5,
fill = "pink",
color = "black") +
xlab(paste("BFI Subscale", gsub("_", " ", subscale))) +
ylab("Frequency") +
ggtitle(paste("Distribution of Answers:", gsub("_", " ", toupper(subscale)))) +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(0, 8))
}
bfi_subscales <- c("bfi_a1", "bfi_a2", "bfi_a3", "bfi_o1", "bfi_e1", "bfi_a4", "bfi_a5", "bfi_a6", "bfi_a7", "bfi_a8", "bfi_a9", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5", "bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9", "bfi_o10", "bfi_c1", "bfi_c2", "bfi_c3", "bfi_c4", "bfi_c5", "bfi_c6", "bfi_c7", "bfi_c8", "bfi_c9", "bfi_e2", "bfi_e3", "bfi_e4", "bfi_e5", "bfi_e6", "bfi_e7", "bfi_e8", "bfi_n1", "bfi_n2", "bfi_n3", "bfi_n4", "bfi_n5", "bfi_n6", "bfi_n7", "bfi_n8")
for (subscale in bfi_subscales) {
print(h1(subscale, paste("Subscale", gsub("_", " ", subscale))))
}
h2 <- function(data, variable, title) {
ggplot(data = data, aes(x = .data[[variable]])) +
geom_histogram(binwidth = 0.05, fill = "pink", color = "black", alpha = 0.7) +
labs(title = "Distribution of IAT D-Scores", x = "D Score", y = "Frequency") +
theme_classic() +
scale_x_continuous(breaks = pretty_breaks(n = 10))
}
h2(data_processed_after_exclusions, "D_Score", "IAT D-Score")
data_correlation_matrix <- data_processed_after_exclusions |>
dplyr::select(starts_with("bfi_"), D_Score)
cor_matrix <- cor(data_correlation_matrix, use = "pairwise.complete.obs")
cor_matrix_rounded <- round(cor_matrix, 2)
print(cor_matrix_rounded)
scores_men <- data_processed_after_exclusions$D_Score[data_processed_after_exclusions$sex == "m"]
scores_women <- data_processed_after_exclusions$D_Score[data_processed_after_exclusions$sex == "f"]
# Perform the t-test
t_test_result <- report(t.test(scores_men, scores_women, alternative = "two.sided"))
# Print the t-test result
t_test_result
bfi_subscale_names <- c("bfi_a1", "bfi_a2", "bfi_a3", "bfi_a4", "bfi_a5",
"bfi_a6", "bfi_a7", "bfi_a8", "bfi_a9",
"bfi_c1", "bfi_c2", "bfi_c3", "bfi_c4", "bfi_c5",
"bfi_c6", "bfi_c7", "bfi_c8", "bfi_c9",
"bfi_e1", "bfi_e2", "bfi_e3", "bfi_e4", "bfi_e5",
"bfi_e6", "bfi_e7", "bfi_e8",
"bfi_n1", "bfi_n2", "bfi_n3", "bfi_n4", "bfi_n5",
"bfi_n6", "bfi_n7", "bfi_n8",
"bfi_o1", "bfi_o2", "bfi_o3", "bfi_o4", "bfi_o5",
"bfi_o6", "bfi_o7", "bfi_o8", "bfi_o9", "bfi_o10")
for (subscale in bfi_subscale_names) {
formula <- as.formula(paste("D_Score ~", subscale))
regression_model <- report(lm(formula, data = data_processed_after_exclusions))
cat("Regression for", subscale, "\n")
print(summary(regression_model))
cat("\n")
}
# Calculate IAT score cutoffs
iat_score_cutoff_top <- quantile(data_processed_after_exclusions$D_Score, 0.9, na.rm = TRUE)
iat_score_cutoff_bottom <- quantile(data_processed_after_exclusions$D_Score, 0.1, na.rm = TRUE)
# Create a column indicating extreme or normal IAT scores
data_processed_after_exclusions <- data_processed_after_exclusions %>%
mutate(extreme_iat = ifelse(D_Score >= iat_score_cutoff_top | D_Score <= iat_score_cutoff_bottom,
"extreme",
"normal"))
# Function to create scatter plot
function_scatter_plot_bfi <- function(column, name_subscale) {
ggplot(data_processed_after_exclusions, aes(x = get(column), y = D_Score)) +
geom_point(aes(shape = extreme_iat), alpha = 0.7) +
scale_shape_manual(values = c(extreme = 17, normal = 16)) +
geom_smooth(method = "lm") +
ggtitle(name_subscale) +
xlab(paste0("Mean ", name_subscale)) +
ylab("D-Score") +
theme_classic() +
theme(legend.position = "none")
}
agreeableness_plot <- function_scatter_plot_bfi("mean_bfi_a", "Agreeableness")
conscientiousness_plot <- function_scatter_plot_bfi("mean_bfi_c", "Conscientiousness")
extraversion_plot <- function_scatter_plot_bfi("mean_bfi_e", "Extraversion")
neuroticism_plot <- function_scatter_plot_bfi("mean_bfi_n", "Neuroticism")
openness_plot <- function_scatter_plot_bfi("mean_bfi_o", "Openness")
print(agreeableness_plot)
print(conscientiousness_plot)
print(extraversion_plot)
print(neuroticism_plot)
print(openness_plot)
combining_bfi_plots <- agreeableness_plot + conscientiousness_plot + extraversion_plot + neuroticism_plot + combining_bfi_plots
combining_bfi_plots <- agreeableness_plot + conscientiousness_plot + extraversion_plot + neuroticism_plot + openness_plot
print(combining_bfi_plots)
print(combining_bfi_plots)
# Save the combined plot as both PNG and PDF
ggsave("../communications/combined_plot.png", combining_bfi_plots, width = 14, height = 12, units = "cm")
# Save the combined plot as both PNG and PDF
ggsave("../communications/combined_plot.png", combining_bfi_plots, width = 14, height = 12, units = "cm")
ggsave("../communications/combined_plot.pdf", combining_bfi_plots, width = 14, height = 12, units = "cm")
ggsave("../communications/combined_plot.png", combining_bfi_plots, width = 18, height = 12, units = "cm")
ggsave("../communications/combined_plot.pdf", combining_bfi_plots, width = 18, height = 12, units = "cm")
